<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.rainbowuniv.academicmenagmentbe.professor.ProfessorMapper">

    <!-- 강의 등록  -->
    <insert id="saveCourse">
        INSERT INTO course
        SET user_id= #{userId}
        ,classroom = #{classroom}
        ,course_code = #{courseCode}
        ,semester_id = #{semesterId}
        ,type = #{type}
        ,time = #{time}
        ,title = #{title}
        ,credit = #{credit}
        ,week_plan = #{weekPlan}
        ,text_book = #{textBook}
        ,goal = #{goal}
        ,max_std = #{maxStd}
        ,rem_std = #{maxStd}
        ,grade = #{grade}

    </insert>

    <!-- 내가 등록한 강의목록 조회  -->
    <select id="findByUserId">
        SELECT course_code, c.course_id, classroom, type, s.semester, c.time, c.title, c.credit, c.max_std, d.dept_name, c.status, c.grade, c.rem_std,
        (
        SELECT COUNT(*)
        FROM enrollment e
        WHERE e.course_id = c.course_id
        ) AS courseStudent
        FROM course c
        JOIN professor p ON c.user_id = p.user_id
        JOIN department d ON p.dept_id = d.dept_id
        JOIN semester s ON s.semester_id = c.semester_id
        WHERE c.user_id = 2
        AND s.semester_id = 10
        ORDER BY c.course_id DESC;
    </select>


    <!-- 내 강의별 학생 리스트 조회   -->
    <select id="findStudentsByUserId">
        SELECT u.login_id, u.user_name, d.dept_name, u.email, u.phone, s.grade, enrollment_id
        FROM enrollment e
        join student s
          on e.user_id = s.user_id
        join user u
          on s.user_id = u.user_id
        join department d
          on d.dept_id = s.dept_id
        WHERE course_id = #{courseId}
        ORDER BY u.user_id, u.user_name
    </select>

    <!-- 학과조회  -->
    <select id="findDeptNameByUserId">
        SELECT dept_name
        FROM department d
        join professor p
          on p.dept_id = d.dept_id
        WHERE user_id = #{userId}
    </select>

    <!-- 강의 평가조회    -->
    <select id="findSurveyByCourseId">
        SELECT review, ev_score
        FROM enrollment
        WHERE course_id = #{courseId}
    </select>


    <!-- 강의계획서 수정 -->
    <update id="modify">
        UPDATE course
        SET classroom = #{classroom}
        ,type = #{type}
        ,semester = #{semester}
        ,time = #{time}
        ,title = #{title}
        ,credit = #{credit}
        ,week_plan = #{weekPlan}
        ,text_book = #{textBook}
        ,goal = #{goal}
        ,max_std = #{maxStd}
        ,grade = #{grade}
        WHERE course_id = #{courseId}
    </update>

<!--    아래는 학생 기능 추후 옮겨 놓는다 .-->

    <!-- 강의설문지 -->
    <update id="updateReview">
        UPDATE enrollment
        SET review = #{review},
        ev_score = #{evScore},
        course_id = #{courseId}
        WHERE enrollment_id = #{enrollmentId}
        AND user_id = #{userId}
    </update>

    <!--  학생 상태 업데이트   -->
    <update id="updateEnrollStatus">
        UPDATE enrollment
        SET status = #{status}
        WHERE enrollment_id = #{enrollmentId}
    </update>
</mapper>