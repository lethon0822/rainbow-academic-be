<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.rainbowuniv.academicmenagmentbe.sugang.SugangMapper">

    <!--중복 수강 신청 방지-->
    <select id="isAlreadyApplied">
        SELECT COUNT(*)
        FROM enrollment
        WHERE user_id = #{userId}
              AND
              course_id = #{courseId}
    </select>

    <!--정원 초과 강의 수강 신청 방지(잔여 인원 체크)-->
    <select id="checkRemainingSeats">
        SELECT rem_std
        FROM course
        WHERE course_id = #{courseId}
    </select>

    <!--수강 신청 -->
    <insert id="courseEnrollment">
         INSERT INTO enrollment
         SET course_id = #{courseId}
        , user_id = #{userId};
    </insert>

    <!-- 수강 신청 성공시 res. 낱개 강의 정보 -->
    <select id="sugangCourseInfo">
        SELECT
        c.course_id,
        c.course_code,
        c.title,
        c.classroom,
        c.type,
        c.grade,
        u.user_name AS professorName,
        s.year,
        s.semester,
        c.time,
        c.credit,
        c.max_std,
        c.rem_std,
        d.dept_name
        FROM course c
        JOIN user u
        ON u.user_id = c.user_id
        JOIN professor p
        ON p.user_id = c.user_id
        JOIN department d
        ON d.dept_id = p.dept_id
        JOIN enrollment e
        ON e.course_id = c.course_id
        JOIN semester s
        ON s.semester_id = c.semester_id
        WHERE e.course_id = #{courseId}
        AND e.user_id = #{userId}
    </select>

    <!-- 수강 신청시 rem_std를 1 줄여야 함 -->
    <update id ="decreaseRemainingSeats">
        UPDATE course
        SET rem_std = rem_std - 1
        WHERE course_id = #{courseId}</update>


    <!-- 수강 취소를 할 수 있다. -->
    <delete id="sugangCancel">
        DELETE FROM enrollment
        WHERE user_id = #{userId}
        AND course_id = #{courseId}
    </delete>

    <!-- 수강 취소시 rem_std를 1 늘려야 함 -->
    <update id ="increaseRemainingSeats">
        UPDATE course
        SET rem_std = rem_std + 1
        WHERE course_id = #{courseId}
    </update>


    <!-- 금학기 semester_id 조회 -->
    <select id="findCurrentSemesterId">
        SELECT s.semester_id
        FROM semester s
        JOIN schedule sc
        ON s.semester_id = sc.semester_id
        WHERE sc.schedule_type = '학기'
        AND #{currentDateTime} BETWEEN sc.start_datetime AND sc.end_datetime
        LIMIT 1
    </select>


    <!-- 금학기 내가 수강 신청한 모든 과목들을 조회할 수 있다.   -->
    <select id="findAppliedCoursesByUserId">
        SELECT
        c.course_id,
        c.course_code,
        c.title,
        c.classroom,
        c.type,
        c.grade,
        u.user_name AS professorName,
        s.year,
        s.semester,
        c.time,
        c.credit,
        c.max_std,
        c.rem_std,
        d.dept_name
        FROM course c
        JOIN user u ON u.user_id = c.user_id
        JOIN professor p ON p.user_id = c.user_id
        JOIN department d ON d.dept_id = p.dept_id
        JOIN enrollment e ON e.course_id = c.course_id
        JOIN semester s ON c.semester_id = s.semester_id
        WHERE e.user_id = #{userId}
        AND s.semester_id = #{req.currentSemesterId}
    </select>


</mapper>