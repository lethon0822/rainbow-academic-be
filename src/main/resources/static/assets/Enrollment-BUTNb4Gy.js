import{P as v,_ as B,j as b,r as i,q as S,k,S as D,T as H,U as g,c as q,o as z,b as l,C as f,H as I,F as M}from"./index-BYEgPVgA.js";/* empty css                                                                 */import{S as T,C as w}from"./CourseTable-BSwB0ewx.js";const U=c=>v.post("/student/sugang",c),V=c=>v.delete(`/student/sugang/cancel/${c}`),Y=c=>v.get("/student/sugang/current",{params:{semesterId:c}}).catch(x=>x.response),j={class:"creditInfo",style:{"margin-top":"-30px"}},P={class:"credit-box",style:{color:"#343a40","margin-top":"60px","margin-right":"80px"}},$={__name:"Enrollment",setup(c){const y=b().semesterId;console.log("현재 학기아이디: ",y);const h=i([]),C=i([]),o=i([]),n=i([]),p=i({}),L=S(()=>n.value.reduce((t,e)=>t+e.credit,0)),_=S(()=>n.value.length);k(async()=>{const t=await D();h.value=t.data;const e=await H();C.value=e.data;const u=await Y(y);n.value=u.data;const a={year:new Date().getFullYear(),semester:2};p.value={...a};const s=await g(a);o.value=s.data.map(r=>(r.enrolled=n.value.some(d=>d.courseId===r.courseId),r))});const R=async t=>{console.log("검색 필터 전달됨:",t),p.value={...t};const e=await g(t);console.log("개설 강의 내역 백엔드 응답:",e.data),o.value=e.data},F=async t=>{var u;const e={courseId:t.courseId};if(confirm("수강신청을 하시겠습니까?"))try{const a=await U(e);if(a.status===200){const s=a.data,r=o.value.findIndex(d=>d.courseId===s.courseId);r!==-1&&(o.value[r].remStd=s.remStd,o.value[r].enrolled=!0),n.value.push(s),alert("수강신청이 완료되었습니다.");try{const d=await g(p.value);o.value=d.data.map(m=>(m.enrolled=n.value.some(N=>N.courseId===m.courseId),m))}catch{alert("목록 새로고침 실패. 페이지를 새로고침 해주세요.")}}}catch(a){const s=(u=a.response)==null?void 0:u.data;alert((s==null?void 0:s.message)||"예기치 못한 오류가 발생했습니다.")}},E=async t=>{var e,u;if(confirm("수강신청을 취소하시겠습니까?"))try{if((await V(t)).status===200){n.value=n.value.filter(r=>r.courseId!==t);const s=o.value.findIndex(r=>r.courseId===t);s!==-1&&(o.value[s].enrolled=!1,o.value[s].remStd+=1),alert("수강신청이 취소되었습니다.")}}catch(a){((e=a.response)==null?void 0:e.status)===400?alert(((u=a.response)==null?void 0:u.data)||"수강취소 실패"):alert("수강신청 취소 실패! 예기치 못한 오류가 발생했습니다."),console.error(a)}};return(t,e)=>(z(),q(M,null,[e[2]||(e[2]=l("div",{class:"page"},[l("h1",{class:"page-title"},"수강신청 관리")],-1)),f(T,{state:!0,departments:h.value,enrollment:!0,semester:2,onSearch:R},null,8,["departments"]),e[3]||(e[3]=l("h5",{style:{"font-size":"20px","font-weight":"700",color:"#343a40","margin-top":"40px","margin-left":"70px"}}," 개설 과목 목록 ",-1)),f(w,{courseList:o.value,maxHeight:"500px",show:{professorName:!0,remStd:!0,enroll:!0,cancel:!1,deptName:!0},onEnroll:F},null,8,["courseList"]),l("div",j,[e[1]||(e[1]=l("h5",{style:{"font-size":"20px","font-weight":"700",color:"#343a40","margin-top":"50px","margin-left":"70px"}}," 수강신청 내역 ",-1)),l("div",P,[e[0]||(e[0]=l("span",null,"최대 학점: 18학점",-1)),l("span",null,"신청 학점: "+I(L.value)+"학점",1),l("span",null,"신청 과목 수: "+I(_.value)+"개",1)])]),f(w,{courseList:n.value,maxHeight:"500px",show:{professorName:!0,remStd:!0,enroll:!1,cancel:!0,deptName:!1},onCancel:E},null,8,["courseList"])],64))}},K=B($,[["__scopeId","data-v-f59b1cea"]]);export{K as default};
