import{_ as v,c as i,o as a,a as t,F as y,E as f,H as s,b,j as p,q as _,k as g,e as P,h as E,C as k,W as B}from"./index-D6WQuHd6.js";import{G as I}from"./GradeService-DQsg0w3b.js";const q={class:"override-whitebox-margin"},N={class:"table-container"},S={class:"fixed_headers"},x={class:"table-container"},w={class:"fixed_headers"},j={class:"table-container"},A={class:"fixed_headers"},$={__name:"PutAllGrades",props:["grades","creditByCategory","semesterGrades"],setup(h){return(c,n)=>(a(),i("div",q,[n[3]||(n[3]=t("h4",null,"과목별 성적",-1)),t("div",N,[t("table",S,[n[0]||(n[0]=t("thead",null,[t("tr",null,[t("th",null,"순번"),t("th",null,"학년"),t("th",null,"학기"),t("th",null,"과목코드"),t("th",null,"교과목명"),t("th",null,"학점"),t("th",null,"등급"),t("th",null,"이수구분")])],-1)),t("tbody",null,[(a(!0),i(y,null,f(h.grades,(r,u)=>(a(),i("tr",{key:u},[t("td",null,s(u+1),1),t("td",null,s(r.grade),1),t("td",null,s(r.semester),1),t("td",null,s(r.courseId),1),t("td",null,s(r.title),1),t("td",null,s(r.credit),1),t("td",null,s(r.rank||"-"),1),t("td",null,s(r.type),1)]))),128))])])]),n[4]||(n[4]=t("h4",null,"이수구분별 취득학점",-1)),t("div",x,[t("table",w,[n[1]||(n[1]=t("thead",null,[t("tr",null,[t("th",null,"순번"),t("th",null,"학년"),t("th",null,"학기"),t("th",null,"전공필수"),t("th",null,"전공선택"),t("th",null,"교양")])],-1)),t("tbody",null,[(a(!0),i(y,null,f(h.creditByCategory,(r,u)=>(a(),i("tr",{key:u},[t("td",null,s(u+1),1),t("td",null,s(r.grade),1),t("td",null,s(r.semester),1),t("td",null,s(r.majorRequired),1),t("td",null,s(r.majorElective),1),t("td",null,s(r.generalEducation),1)]))),128))])])]),n[5]||(n[5]=t("h4",null,"학기별 성적",-1)),t("div",j,[t("table",A,[n[2]||(n[2]=t("thead",null,[t("tr",null,[t("th",null,"순번"),t("th",null,"학년"),t("th",null,"학기"),t("th",null,"신청학점"),t("th",null,"취득학점"),t("th",null,"평균점수"),t("th",null,"평균평점"),t("th",null,"석차"),t("th",null,"인원")])],-1)),t("tbody",null,[(a(!0),i(y,null,f(h.semesterGrades,(r,u)=>(a(),i("tr",{key:u},[t("td",null,s(u+1),1),t("td",null,s(r.grade),1),t("td",null,s(r.semester),1),t("td",null,s(r.requestedCredits),1),t("td",null,s(r.acquiredCredits),1),t("td",null,s(r.avgScore),1),t("td",null,s(r.avgGradePoint),1),t("td",null,s(r.grading),1),t("td",null,s(r.totalStudents),1)]))),128))])])])]))}},F=v($,[["__scopeId","data-v-0e9035d9"]]),M={class:"content"},R={__name:"GetAllGrades",setup(h){const c=b([]),n=p(),r=Number(n.userId);if(!r||isNaN(r))throw new Error(`userId가 유효하지 않습니다: ${n.userId}`);const u=_(()=>{const o=[];return c.value.forEach(l=>{const e=o.find(d=>d.grade===l.grade&&d.semester===l.semester);e?l.type==="전공필수"||l.type==="전공"?e.majorRequired+=l.credit||0:l.type==="전공선택"?e.majorElective+=l.credit||0:l.type==="교양"&&(e.generalEducation+=l.credit||0):o.push({grade:l.grade,semester:l.semester,majorRequired:(l.type==="전공필수"||l.type==="전공")&&l.credit||0,majorElective:l.type==="전공선택"&&l.credit||0,generalEducation:l.type==="교양"&&l.credit||0})}),o}),C=_(()=>{const o=new Map;c.value.forEach(e=>{const d=`${e.grade}-${e.semester}`;o.has(d)||o.set(d,{grade:e.grade,semester:e.semester,acquiredCredits:0,requestedCredits:0,totalGradePoint:0,count:0,avgScore:0,avgGradePoint:0,grading:1,totalStudents:30});const m=o.get(d);m.acquiredCredits+=e.credit||0,m.requestedCredits+=e.credit||0;const G={"A+":4.5,A:4,"B+":3.5,B:3,"C+":2.5,C:2,D:1.5,F:0}[e.rank]??0;m.totalGradePoint+=G,m.count++});const l=[];return o.forEach(e=>{e.avgGradePoint=e.count?(e.totalGradePoint/e.count).toFixed(2):0,e.avgScore=(e.avgGradePoint*20).toFixed(1),delete e.totalGradePoint,delete e.count,l.push(e)}),l.sort((e,d)=>e.grade===d.grade?Number(e.semester)-Number(d.semester):e.grade-d.grade)});return g(async()=>{try{const o=p(),l=Number(o.userId);if(!l||isNaN(l))throw new Error(`userId가 유효하지 않습니다: ${o.userId}`);const e=await I(l);c.value=e.data||[]}catch(o){console.error("API 호출 실패:",o)}}),(o,l)=>(a(),P(B,{title:"학적변동관리"},{default:E(()=>[t("div",M,[k(F,{grades:c.value,creditByCategory:u.value,semesterGrades:C.value},null,8,["grades","creditByCategory","semesterGrades"])])]),_:1}))}},W=v(R,[["__scopeId","data-v-be7dfd27"]]);export{W as default};
