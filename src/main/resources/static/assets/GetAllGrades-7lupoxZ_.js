import{_ as h,a as G,t as k,c,o as d,b as e,F as _,E as g,J as x,H as a,g as A,M as C,r as p,j as y,k as I,Y as w,C as f}from"./index-BYEgPVgA.js";/* empty css                                                                 */import{G as S}from"./GradeService-C4g2rSMY.js";const B={class:"filter-bar"},L={class:"grade-buttons"},$=["onClick"],N={class:"filter-group"},P=["value"],D={__name:"AcademicFilterBar",emits:["search"],setup(b,{emit:n}){const u=n,s=G({semester:"",grade:""}),o=[{value:"",label:"전체"},{value:"1",label:"1학년"},{value:"2",label:"2학년"},{value:"3",label:"3학년"},{value:"4",label:"4학년"}],l=[{semester:"",label:"전체"},{semester:"1",label:"1학기"},{semester:"2",label:"2학기"}];k(()=>s.semester,()=>{i()});const t=m=>{s.grade=m,i()},i=()=>{const m={semester:s.semester===""?null:s.semester,grade:s.grade===""?null:s.grade};console.log("AcademicFilterBar에서 emit하는 데이터:",m),u("search",m)};return(m,v)=>(d(),c("div",B,[e("div",L,[(d(),c(_,null,g(o,r=>e("button",{key:r.value,onClick:J=>t(r.value),class:x(["grade-btn",{active:s.grade===r.value}])},a(r.label),11,$)),64))]),e("div",N,[v[1]||(v[1]=e("label",null,"학기",-1)),A(e("select",{"onUpdate:modelValue":v[0]||(v[0]=r=>s.semester=r),class:"select-input"},[(d(),c(_,null,g(l,r=>e("option",{key:r.semester,value:r.semester},a(r.label),9,P)),64))],512),[[C,s.semester]])])]))}},F=h(D,[["__scopeId","data-v-2ddd1323"]]),H={class:"table-wrapper"},M="600px",O={__name:"GradeTable",setup(b){const n=p([]),u=y();async function s(){try{const o=u.semesterId,l=await S({semesterId:o});console.log("API 응답 데이터:",JSON.stringify(l.data,null,2)),n.value=l.data}catch(o){console.error("성적 조회 실패:",o),n.value=[]}}return I(()=>{s()}),(o,l)=>(d(),c("div",{class:"table-container",style:w({maxHeight:M})},[e("div",H,[e("table",null,[l[0]||(l[0]=e("thead",null,[e("tr",null,[e("th",null,"연도"),e("th",null,"학기"),e("th",null,"이수구분"),e("th",null,"과목코드"),e("th",null,"과목명"),e("th",null,"담당교수"),e("th",null,"수강학년"),e("th",null,"학점"),e("th",null,"등급"),e("th",null,"평점")])],-1)),e("tbody",null,[(d(!0),c(_,null,g(n.value,t=>(d(),c("tr",{key:t.courseCode},[e("td",null,a(t.year),1),e("td",null,a(t.semester),1),e("td",null,a(t.type),1),e("td",null,a(t.courseCode),1),e("td",null,a(t.title),1),e("td",null,a(t.professorName),1),e("td",null,a(t.grade)+"학년",1),e("td",null,a(t.credit),1),e("td",null,a(t.rank),1),e("td",null,a(t.point),1)]))),128))])])])],4))}},V=h(O,[["__scopeId","data-v-3c9c0203"]]),z={class:"page"},E={__name:"GetAllGrades",setup(b){const n=p([]),u=y(),s=p({semester:"",grade:"",semesterId:0});I(async()=>{try{s.value.semesterId=u.semesterId||0,await o(s.value)}catch(l){console.error("초기 데이터 로드 실패",l)}});const o=async l=>{console.log("handleSearch 호출됨:",l),s.value={semester:l.semester||null,grade:l.grade||null,semesterId:u.semesterId||0},console.log("최종 검색 필터:",s.value);try{const t={semesterId:s.value.semesterId};s.value.semester&&(t.semester=parseInt(s.value.semester)),s.value.grade&&(t.grade=parseInt(s.value.grade)),console.log("API 호출 파라미터:",t);const i=await S(t);console.log("API 응답:",i.data),n.value=i.data}catch(t){console.error("강의 목록 조회 실패",t),n.value=[]}};return(l,t)=>(d(),c("div",z,[t[0]||(t[0]=e("h1",{class:"page-title"},"영구 성적조회",-1)),f(F,{onSearch:o}),f(V,{courseList:n.value},null,8,["courseList"])]))}},Y=h(E,[["__scopeId","data-v-6fbb6ac3"]]);export{Y as default};
